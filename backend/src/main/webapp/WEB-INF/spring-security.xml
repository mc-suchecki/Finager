<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- These URLs are not secured in order to make login and registration available -->
	<http pattern="/login" security="none" />
	<http pattern="/logout" security="none" />
	<http pattern="/loginfailed" security="none" />
	<http pattern="/register" security="none" />

	<!-- Navigation configuration -->
	<http auto-config="true">
		<intercept-url pattern="/*" access="ROLE_USER" />
		<form-login login-page="/login" default-target-url="/accounts"
			authentication-failure-url="/loginfailed" />
		<logout logout-success-url="/logout" />
	</http>
	
	<!-- Source of user data for Security module -->
	<authentication-manager>
		<authentication-provider user-service-ref='userDetailsService'>
			<password-encoder hash="sha-256">
				<salt-source ref="saltSource" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="userDetailsService" class="pl.mc.finager.service.UserService" />
	<beans:bean class="org.springframework.security.authentication.dao.ReflectionSaltSource" id="saltSource">
    	<beans:property name="userPropertyToUse" value="username"/>
    	<!-- username is specified as salt source, but it is actually e_mail field from the DB! -->
	</beans:bean>

</beans:beans>